"""Modularised CoolBox setup command implementation."""
from __future__ import annotations

from ._cli import main
from ._commands import (
    build_extensions,
    check_outdated,
    clean_pyc,
    collect_problems,
    doctor,
    install,
    lock,
    run_tests,
    self_update,
    show_info,
    show_setup_banner,
    sync,
    update_repo,
)
from ._config import CONFIG, Config, DEFAULT_RAINBOW, IS_TTY, RAINBOW_COLORS
from ._execution import _hint_for_command, _retry, _run
from ._logging import log, logger
from ._pip import (
    _available_wheel_links,
    _build_install_plan,
    _execute_install_plan,
    _pip,
    _restore_wheel_artifacts,
    _store_wheel_artifacts,
    _write_req_stamp,
)
from ._state import (
    BASE_ENV,
    CACHE_ROOT,
    DEV_PACKAGES,
    MIN_PYTHON,
    ROOT_DIR,
    REQUIREMENTS_FILE,
    STAMP_CACHE_ROOT,
    WHEEL_CACHE_ROOT,
    check_python_version,
    default_cache_root,
    get_root,
    get_venv_dir,
    is_offline,
    locate_root,
    offline_auto_detected,
    set_offline,
)
from ._summary import RunSummary, SUMMARY, send_telemetry
from ._ui import (
    LockingConsole,
    NeonPulseBorder,
    RainbowSpinnerColumn,
    SmartPercentColumn,
    console,
    create_progress,
    rainbow_text,
)
from ._venv import _venv_python, ensure_venv
from .version import __version__

__all__ = [
    "BASE_ENV",
    "CACHE_ROOT",
    "CONFIG",
    "DEV_PACKAGES",
    "DEFAULT_RAINBOW",
    "IS_TTY",
    "MIN_PYTHON",
    "RAINBOW_COLORS",
    "ROOT_DIR",
    "REQUIREMENTS_FILE",
    "STAMP_CACHE_ROOT",
    "SUMMARY",
    "WHEEL_CACHE_ROOT",
    "Config",
    "LockingConsole",
    "NeonPulseBorder",
    "RainbowSpinnerColumn",
    "RunSummary",
    "SmartPercentColumn",
    "__version__",
    "_available_wheel_links",
    "_build_install_plan",
    "_execute_install_plan",
    "_hint_for_command",
    "_pip",
    "_restore_wheel_artifacts",
    "_retry",
    "_run",
    "_store_wheel_artifacts",
    "_venv_python",
    "_write_req_stamp",
    "build_extensions",
    "check_outdated",
    "check_python_version",
    "clean_pyc",
    "collect_problems",
    "console",
    "create_progress",
    "default_cache_root",
    "doctor",
    "ensure_venv",
    "get_root",
    "get_venv_dir",
    "install",
    "is_offline",
    "locate_root",
    "log",
    "logger",
    "lock",
    "main",
    "offline_auto_detected",
    "rainbow_text",
    "run_tests",
    "self_update",
    "send_telemetry",
    "set_offline",
    "show_info",
    "show_setup_banner",
    "sync",
    "update_repo",
]
