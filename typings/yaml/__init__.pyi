from typing import Any, IO, overload

class Loader: ...
class Dumper: ...
class SafeLoader(Loader): ...
class SafeDumper(Dumper): ...

@overload
def safe_load(stream: str) -> Any: ...

@overload
def safe_load(stream: bytes) -> Any: ...

@overload
def safe_load(stream: IO[str]) -> Any: ...

@overload
def safe_load(stream: IO[bytes]) -> Any: ...

@overload
def load(stream: str, Loader: type[Loader] | None = ...) -> Any: ...

@overload
def load(stream: bytes, Loader: type[Loader] | None = ...) -> Any: ...

@overload
def load(stream: IO[str], Loader: type[Loader] | None = ...) -> Any: ...

@overload
def load(stream: IO[bytes], Loader: type[Loader] | None = ...) -> Any: ...

@overload
def safe_dump(data: Any) -> str: ...

@overload
def safe_dump(data: Any, stream: IO[str], *, explicit_start: bool | None = ..., explicit_end: bool | None = ..., **kwargs: Any) -> str | None: ...

@overload
def dump(data: Any, stream: IO[str], Dumper: type[Dumper] | None = ..., **kwargs: Any) -> str | None: ...

@overload
def dump(data: Any, stream: None = ..., Dumper: type[Dumper] | None = ..., **kwargs: Any) -> str: ...
